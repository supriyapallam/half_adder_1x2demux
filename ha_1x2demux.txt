//Design Code
module demux1x2(output out1,out2,input sel,in);
  assign out1=in&(~sel);
  assign out2=in&sel;
endmodule

module ha(output sum,carry,input a,b);
  wire o1,o2,o3,o4,o5,o6,o7,o8,o9;
  demux1x2 a1(o1,o2,b,a);
  demux1x2 a2(o3,o4,a,b);
  demux1x2 a3(o5,o6,o1,1'b1);
  demux1x2 a4(o7,o8,o3,o5);
  demux1x2 a5(sum,o9,o7,1'b1);
  demux1x2 a6(o10,carry,b,a);
endmodule

//Test Bench Code
module tb();
  wire sum,carry;
  reg a,b;
  ha DUT(sum,carry,a,b);
  initial
    begin
      integer i;
      for(i=0;i<4;i=i+1)
        begin
          {a,b}=i;
          #10;
        end
    end
  initial
    begin
      $monitor("a=%b,b=%b,sum=%b,carry=%b",a,b,sum,carry);
    end
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
endmodule

